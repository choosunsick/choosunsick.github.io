<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sunsick&#39;s blog</title>
    <link>https://choosunsick.github.io/post/</link>
    <description>Recent content in Posts on Sunsick&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 14 Dec 2020 19:27:28 +0900</lastBuildDate>
    
	<atom:link href="https://choosunsick.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DElETE와 UPDATE 문</title>
      <link>https://choosunsick.github.io/post/sql_ch_3/</link>
      <pubDate>Mon, 14 Dec 2020 19:27:28 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/sql_ch_3/</guid>
      <description>2장에서는 데이터를 가져오는 방법에 대해 알아보았습니다. SELECT 문의 사용 방법에 대해 다시 확인하고 싶으시다면 링크를 참조해 주시기 바랍니다. 이번 장에서 테이블 내</description>
    </item>
    
    <item>
      <title>라즈베리파이 클러스터에 하둡 설치하기</title>
      <link>https://choosunsick.github.io/post/hadoop_install/</link>
      <pubDate>Mon, 07 Dec 2020 18:46:36 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/hadoop_install/</guid>
      <description>라즈베리파이 os 설치하기 raspberrypi imager를 통해 라즈베리파이의 os를 깔아줍니다. 해당 프로그램은 링크에서 자신의 컴퓨터 os에 맞게 설치할 수 있습니다. 설치</description>
    </item>
    
    <item>
      <title>SELECT 문: 데이터 가져오기의 축복</title>
      <link>https://choosunsick.github.io/post/sql_ch_2/</link>
      <pubDate>Thu, 03 Dec 2020 19:11:13 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/sql_ch_2/</guid>
      <description>2장 1장에서는 테이블 만드는 방법과 지우는 방법 데이터를 입력하는 방법을 배웠습니다. 이번 2장에서는 데이터를 가져오는 방법에 대해 알아봅시다.현재 데이터베</description>
    </item>
    
    <item>
      <title>데이터와 테이블: 데이터 처리</title>
      <link>https://choosunsick.github.io/post/sql_ch_1/</link>
      <pubDate>Tue, 01 Dec 2020 20:47:37 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/sql_ch_1/</guid>
      <description>준비사항 실제로 SQL 문을 치기위해 MY SQL과 유사한 MARIA DB를 도커를 통해 설치해 줍니다. 도커를 설치하는 방법은 도커 홈페이지를 참조하세요. 이제 MARIA D를 설치할 차</description>
    </item>
    
    <item>
      <title>샤이니 앱에 항목 탭 추가하기</title>
      <link>https://choosunsick.github.io/post/shiny_navbarpage/</link>
      <pubDate>Sat, 12 Sep 2020 19:01:49 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/shiny_navbarpage/</guid>
      <description>이전 글에서는 샤이니 앱에 테마를 적용해 보았습니다. 샤이니 앱에 테마를 적용하는 방법은 이전 글을 참고해주세요! 이번 글에서는 샤이니 앱에 항목 탭을 추가해 볼 것입</description>
    </item>
    
    <item>
      <title>샤이니 앱에 테마 적용하기</title>
      <link>https://choosunsick.github.io/post/shiny_apply_theme/</link>
      <pubDate>Sat, 12 Sep 2020 19:01:31 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/shiny_apply_theme/</guid>
      <description>이전 글에서 샤이니 앱을 도커화(dockerizing) 해보았습니다. 이에 대한 자세한 내용은 이전 글을 참고해주시면 감사하겠습니다. 자신만의 샤이니 앱을</description>
    </item>
    
    <item>
      <title>R 샤이니 앱 도커라이징(Dockerizing) 하기</title>
      <link>https://choosunsick.github.io/post/dockerizing/</link>
      <pubDate>Sat, 22 Aug 2020 14:03:50 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/dockerizing/</guid>
      <description>R 샤이니란 ? 샤이니는 R과 직접적으로 상호작용할 수 있는 앱을 만들어주는 패키지입니다. 예를 들면 데이터 분석 결과에 대해 앱의 사용자가 웹과 상호작용하여 여러가</description>
    </item>
    
    <item>
      <title>옵티마이저(optimizer) 비교하기</title>
      <link>https://choosunsick.github.io/post/optimizer_compare/</link>
      <pubDate>Wed, 12 Aug 2020 18:26:14 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/optimizer_compare/</guid>
      <description>옵티마이저(optimizer)란 ? 이번 글에서는 가중치와 편향을 갱신하는 방법을 소개합니다. 기존의 방식과 다른 방식으로 가중치와 편향을 갱신할 수 있으며</description>
    </item>
    
    <item>
      <title>R로 딥러닝하기 목차</title>
      <link>https://choosunsick.github.io/post/contents_list/</link>
      <pubDate>Sat, 04 Apr 2020 14:06:58 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/contents_list/</guid>
      <description>R 사용에 익숙하신 분들은 1번글부터 보시면 됩니다. R 사용이 처음 이신분은 맨 밑에 R 초심자를 위한 글을 참고해주세요. 순서 벡터와 행렬의 연산 벡터 연산 행렬 연산</description>
    </item>
    
    <item>
      <title>Chapter4 오차역전파법을 적용하기</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_4/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:37 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_4/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter4 다양한 역전파 계층</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_3/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:35 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_3/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter4 역전파와 간단한 계산문제</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_2/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:33 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_2/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter4 계산 그래프와 연쇄법칙</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_1/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_1/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 학습과정 챕터에 이어서 5번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은</description>
    </item>
    
    <item>
      <title>Chapter2 신경망 연습</title>
      <link>https://choosunsick.github.io/post/neural_network_practice/</link>
      <pubDate>Mon, 16 Mar 2020 19:35:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_practice/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 벡터와 행렬연산에 이어 2번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에</description>
    </item>
    
    <item>
      <title>Chapter2 3층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/softmax_function/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:26 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/softmax_function/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 벡터와 행렬연산에 이어 2번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에</description>
    </item>
    
    <item>
      <title>Chapter2 활성화 함수</title>
      <link>https://choosunsick.github.io/post/activation_fuctions/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:03 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/activation_fuctions/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 벡터와 행렬연산에 이어 2번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에</description>
    </item>
    
    <item>
      <title>Chapter2 신경망</title>
      <link>https://choosunsick.github.io/post/neural_network_intro/</link>
      <pubDate>Mon, 16 Mar 2020 19:32:28 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_intro/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 이전 글에서 벡터와 행렬연산, 브로드캐스트 연산 등에 이어서 2번째 순서입니다. 이전 글들은</description>
    </item>
    
    <item>
      <title>Chapter3 2층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/neural_network_5/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:14 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_5/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter3 미분과 확률적 경사하강법</title>
      <link>https://choosunsick.github.io/post/neural_network_4/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:08 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_4/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter3 미니 배치 학습과 손실 함수 사용의 이유</title>
      <link>https://choosunsick.github.io/post/neural_network_3/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_3/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter3 손실함수</title>
      <link>https://choosunsick.github.io/post/neural_network_2/</link>
      <pubDate>Sat, 14 Mar 2020 22:13:44 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_2/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chapter3 신경망 학습</title>
      <link>https://choosunsick.github.io/post/neural_network_1/</link>
      <pubDate>Sat, 14 Mar 2020 22:09:52 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_1/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 신경망 챕터에 이어서 3번째 순서입니다. 이전 글과 내용이 이어집니다. 이전 글들은 이곳에서</description>
    </item>
    
    <item>
      <title>Chpater1 브로드캐스트 연산</title>
      <link>https://choosunsick.github.io/post/broadcast_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:22:00 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/broadcast_operation/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 이전 글에서 내용이 이어집니다. 브로드캐스트란? 앞서 행렬과 벡터 간 연산을 할 때 재활용 규칙</description>
    </item>
    
    <item>
      <title>Chpater1 행렬의 연산</title>
      <link>https://choosunsick.github.io/post/matrix_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:45 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/matrix_operation/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 이전 글에서 내용이 이어집니다. 행렬의 연산 이제 벡터의 연산에 이어 행렬의 연산에 대해 알아보</description>
    </item>
    
    <item>
      <title>Chpater1 벡터의 연산</title>
      <link>https://choosunsick.github.io/post/vector_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/vector_operation/</guid>
      <description>이 시리즈는 R로 딥러닝을 구현하고 설명하는 것에 목표를 둔 글입니다. 만약 R 사용이 처음이시라면 링크의 R 초심자를 위한 기초 사용법을 참조해주세요. 소개 이번 글</description>
    </item>
    
    <item>
      <title>Mnist 손글씨 데이터 읽어오는 패키지 소개</title>
      <link>https://choosunsick.github.io/post/mnist/</link>
      <pubDate>Sat, 08 Feb 2020 17:29:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/mnist/</guid>
      <description>dslabs 패키지 소개 스터디 그룹에서 프로젝트를 진행하면서 데이터셋과 관련된 좋은 패키지를 발견하여 소개해드릴까 합니다. R CLAN에 등록된 dslabs이라는 패</description>
    </item>
    
    <item>
      <title>R 프로그래밍 대표 문법 살펴보기</title>
      <link>https://choosunsick.github.io/post/r_programming_grammar/</link>
      <pubDate>Fri, 17 Jan 2020 17:43:41 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_programming_grammar/</guid>
      <description>1.2 R 사용시 필요한 대표적인 기초 문법 1.2.1 함수 함수는 특정 동작을 수행하는 블럭입니다. 다른 객체로 값을 전달하거나 계산을 하거나 등의 기능을 처리한 후 그 값을 반환합</description>
    </item>
    
    <item>
      <title>R 자료형 살펴보기</title>
      <link>https://choosunsick.github.io/post/r_structure/</link>
      <pubDate>Fri, 17 Jan 2020 17:42:53 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_structure/</guid>
      <description>소개 이 글은 딥러닝 패키지 라이브러리를 사용하지 않고 R로 딥러닝의 원리를 파악하고 구현해나가는 과정을 소개할 것 입니다. 이 글은 기본적인 수학적 지식을 가지고 있</description>
    </item>
    
    <item>
      <title>R 설치하기</title>
      <link>https://choosunsick.github.io/post/r_install/</link>
      <pubDate>Fri, 17 Jan 2020 17:39:27 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_install/</guid>
      <description>R 설치 &amp;amp; 실행 방법 R의 설치에 앞서 R이 무엇인지에 대해 간략하게 설명하면, R은 통계학과 그래픽을 다루는 소프트웨어입니다. R은 기존의 통계학을 다루는 프로그</description>
    </item>
    
    <item>
      <title>Requests_html 패키지 소개</title>
      <link>https://choosunsick.github.io/post/request_html_introduce/</link>
      <pubDate>Mon, 30 Sep 2019 15:50:02 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/request_html_introduce/</guid>
      <description>안녕하세요. LOPES 팀의 추선식 입니다. 이번에 기존의 KBO의 자료를 모으는 프로젝트를 개선하면서 자료를 모으는 데 좋은 패키지를 찾아서 한번 소개를 해볼까 합니다.</description>
    </item>
    
    <item>
      <title>구글 Voice Kit 부팅 시 바로 실행하기</title>
      <link>https://choosunsick.github.io/post/automatic_voicekit_operation/</link>
      <pubDate>Sun, 08 Sep 2019 17:20:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/automatic_voicekit_operation/</guid>
      <description>라즈베리파이 터미널 환경과 개인 노트북 터미널 환경 연결하기 Google Voice Kit을 자동으로 실행시키는 작업에 앞서 라즈베리파이의 실행을 본인의 노트북에서 진행하기 위한</description>
    </item>
    
    <item>
      <title>구글 보이스 킷을 조립해보자 !</title>
      <link>https://choosunsick.github.io/post/make_voicekit/</link>
      <pubDate>Sun, 08 Sep 2019 16:30:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/make_voicekit/</guid>
      <description>이번에 시간이 없어서 그동안 조립하지 못했던 Google AIY Voice Kit을 조립해 보았습니다. Google AIY Voice Kit은 음성인식 AI입니다. 현재 AI 스피커는 구글 홈, 네이버의 클로바</description>
    </item>
    
    <item>
      <title>R을 사용해 HDF5 파일로 만들고 데이터 압축하기</title>
      <link>https://choosunsick.github.io/post/make_hdf_5_for_r/</link>
      <pubDate>Wed, 17 Jul 2019 17:21:17 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/make_hdf_5_for_r/</guid>
      <description>R로 HDF5 파일 만들기 안녕하세요. 스터디 그룹 LOPES의 추선식 입니다. 오늘은 저번에 소개한 프로젝트에 이어 R을 사용해 데이터를 HDF5 파일로 저장하는 방법을 소개</description>
    </item>
    
    <item>
      <title>R을 사용해 모든 주식 종목 데이터를 하나의 파일로 저장하기</title>
      <link>https://choosunsick.github.io/post/stockdata_to_hdf5/</link>
      <pubDate>Wed, 10 Jul 2019 17:16:03 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/stockdata_to_hdf5/</guid>
      <description>안녕하세요. 스터디 그룹 LOPES의 추선식 입니다. 이전의 프로젝트 소개글에서 언급한 것과 같이 이번에는 HDF5 형식에 대한 간략한 소개와 함께 R을 사용해 HDF5 파일을</description>
    </item>
    
    <item>
      <title>KBO 경기에서 선수들의 기록 데이터 수집하고 분석하기</title>
      <link>https://choosunsick.github.io/post/kbo_data_wrangling/</link>
      <pubDate>Thu, 07 Feb 2019 16:30:58 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/kbo_data_wrangling/</guid>
      <description>안녕하세요. LOPES 팀의 추선식 입니다. 이번에 저희 팀에서 KBO 사이트의 경기 리뷰와 관련된 자료를 파이썬(PYTHON)을 이용해 수집하는 코드를 작성했고 이를 공유</description>
    </item>
    
    <item>
      <title>R에서 서로 다른 크기의 행렬 연산</title>
      <link>https://choosunsick.github.io/post/sweep_fun_introduction/</link>
      <pubDate>Tue, 09 Oct 2018 15:52:32 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/sweep_fun_introduction/</guid>
      <description>안녕하세요. Lopes팀의 추선식 입니다. 이번에 저희팀에서 밑바닥부터 시작하는 딥러닝(Deep Learning from Scratch)이란 책을 R로 구현해보면서 알게 된</description>
    </item>
    
    <item>
      <title>한국 주식 자료 소개</title>
      <link>https://choosunsick.github.io/post/korea_stock_introduction/</link>
      <pubDate>Fri, 31 Aug 2018 15:42:21 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/korea_stock_introduction/</guid>
      <description>깃허브 설명 안녕하세요. LOPES팀의 추선식입니다. 저희 팀에서 주식과 관련된 프로젝트를 하면서 차트 분석을 비롯한 여러 가지 분석을 위한 주식 데이터가 필요하</description>
    </item>
    
    <item>
      <title>2018년 KBO 가을야구 진출팀은 어떤팀일 것인가 ?</title>
      <link>https://choosunsick.github.io/post/kbo_postseason_expentancy/</link>
      <pubDate>Tue, 24 Jul 2018 16:53:31 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/kbo_postseason_expentancy/</guid>
      <description>안녕하세요. 스터디 그룹 LOPES의 추선식입니다. 메이저리그 야구 통계학이라는 책을 공부하는데, 이 책에서 나온 기대 승률(피타고리안 승률)이란 통계적 지</description>
    </item>
    
    <item>
      <title>KBO_update</title>
      <link>https://choosunsick.github.io/post/kbo_update/</link>
      <pubDate>Wed, 04 Jul 2018 18:05:38 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/kbo_update/</guid>
      <description>KBO_data 안녕하세요. 외대 철학과 스터디 그룹 LOPES의 추선식 입니다. 데이터 분석을 공부하면서 느낀 점은 학습에 맞게 구성된 데이터가 적고 이런 형태의 자료를 현실적</description>
    </item>
    
  </channel>
</rss>