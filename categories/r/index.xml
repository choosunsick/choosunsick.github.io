<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Sunsick&#39;s blog</title>
    <link>https://choosunsick.github.io/categories/r/</link>
    <description>Recent content in R on Sunsick&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 04 Apr 2020 14:06:58 +0900</lastBuildDate>
    
	<atom:link href="https://choosunsick.github.io/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R로 딥러닝하기 목차</title>
      <link>https://choosunsick.github.io/post/contents_list/</link>
      <pubDate>Sat, 04 Apr 2020 14:06:58 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/contents_list/</guid>
      <description>R 사용에 익숙하신 분들은 1번글부터 보시면 됩니다. R 사용이 처음 이신분은 맨 밑에 R 초심자를 위한 글을 참고해주세요. 순서 벡터와 행렬의 연산 벡터 연산 행렬 연산</description>
    </item>
    
    <item>
      <title>Chapter5 오차역전파법을 적용하기</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_4/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:37 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_4/</guid>
      <description>오차역전파법을 적용한 2층 신경망 구현하기 이제 오차역전파법이 적용된 2층 신경망을 구현해보겠습니다. 역전파가 적용된 신경망 모델 역시 기존 순전파에서 진행한</description>
    </item>
    
    <item>
      <title>Chapter5 다양한 역전파 계층</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_3/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:35 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_3/</guid>
      <description>각 계층 구현하기 이번에는 신경망 모델에서 역전파를 하기 위해 필요한 함수들 예를 들어 softmax()와 loss(), sigmoid(), ReLU() 기존 순전파 계산 model.forward(</description>
    </item>
    
    <item>
      <title>Chapter5 역전파와 간단한 계산문제</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_2/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:33 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_2/</guid>
      <description>역전파 계산그래프의 역전파는 부분적인 계산을 계속 출력하여 최종 계산을 이끌어내듯이 연쇄법칙과 같은 원리를 사용합니다. 즉 복잡한 미분을 작은 계산들의 곱으로 표</description>
    </item>
    
    <item>
      <title>Chapter5 계산 그래프와 연쇄법칙</title>
      <link>https://choosunsick.github.io/post/neural_network_backward_1/</link>
      <pubDate>Mon, 30 Mar 2020 22:07:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_backward_1/</guid>
      <description>앞선 글에서는 손실 함수의 기울기를 계산해 각 가중치와 편향에 대해 수치미분으로 그 값을 갱신하였습니다. 그러나 이 방식은 너무 오래걸린다는 단점이 있습니다. 이번</description>
    </item>
    
    <item>
      <title>Chapter2 신경망 연습</title>
      <link>https://choosunsick.github.io/post/neural_network_practice/</link>
      <pubDate>Mon, 16 Mar 2020 19:35:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_practice/</guid>
      <description>손글씨 데이터 인식하고 분류하기 모델을 만들었지만 이 모델을 사용하기에는 아직 제한이 있습니다. 왜냐하면, 이 모델은 훈련을 거치지 않았기 때문에 성능이 좋지 못합</description>
    </item>
    
    <item>
      <title>Chapter2 3층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/softmax_function/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:26 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/softmax_function/</guid>
      <description>소프트맥스 함수 출력층에서 사용하는 함수에는 항등함수와 소프트맥스 함수가 있습니다. 항등함수의 경우 이름 그대로 입력이 곧 출력이 되는 함수로 신경망 회귀 모델을</description>
    </item>
    
    <item>
      <title>Chapter2 활성화 함수</title>
      <link>https://choosunsick.github.io/post/activation_fuctions/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:03 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/activation_fuctions/</guid>
      <description>활성화 함수란 ? 활성화 함수는 이전층(layer)의 뉴런에서 다음 층의 뉴런으로 신호를 전달하는 역할을 합니다. 이때 활성화 함수의 값에 따라서 다음 층의 뉴런으</description>
    </item>
    
    <item>
      <title>Chapter2 신경망</title>
      <link>https://choosunsick.github.io/post/neural_network_intro/</link>
      <pubDate>Mon, 16 Mar 2020 19:32:28 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_intro/</guid>
      <description>소개 이번 글에서는 인공지능 분야에서 가장 기초가 되는 신경망이 무엇인지 알아보고 그것에 요소들과 신경망을 R로 구현해 손글씨 인식 및 분류 모델을 만들어 보겠습니다</description>
    </item>
    
    <item>
      <title>Chapter3 2층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/neural_network_5/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:14 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_5/</guid>
      <description>신경망 모델에서 기울기 신경망 모델에서 기울기는 무엇을 의미할까요? 신경망 모델에서 기울기는 가중치 행렬의 원소들이 각각 조금 씩 변할 때 손실 함수의 변화정도를 의</description>
    </item>
    
    <item>
      <title>Chapter3 미분과 확률적 경사하강법</title>
      <link>https://choosunsick.github.io/post/neural_network_4/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:08 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_4/</guid>
      <description>수치미분과 기울기 미분을 사용하는 이유는 작은 변화에 따른 손실 함수의 변화 방향을 알기위해서 입니다. 신경망 모델에서 미분을 활용하는 방식을 경사하강법이라 말하</description>
    </item>
    
    <item>
      <title>Chapter3 미니 배치 학습과 손실 함수 사용의 이유</title>
      <link>https://choosunsick.github.io/post/neural_network_3/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_3/</guid>
      <description>미니배치 학습 머신러닝에서 모델의 성능을 높이기 위해서는 훈련데이터를 사용합니다. 신경망 모델에서도 마찬가지로 훈련데이터를 이용해 손실 함수 값이 최소화가 되</description>
    </item>
    
    <item>
      <title>Chapter3 손실함수</title>
      <link>https://choosunsick.github.io/post/neural_network_2/</link>
      <pubDate>Sat, 14 Mar 2020 22:13:44 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_2/</guid>
      <description>손실 함수란 ? 이제 신경망에서 어떻게 학습이 이루어지는지 본격적으로 알아보겠습니다. 신경망에서는 학습을 통해 모델의 성능을 나아지게 합니다. 그렇다면 모델의</description>
    </item>
    
    <item>
      <title>Chapter3 신경망 학습</title>
      <link>https://choosunsick.github.io/post/neural_network_1/</link>
      <pubDate>Sat, 14 Mar 2020 22:09:52 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_1/</guid>
      <description>소개 이번 글에서는 신경망 분류 모델이 어떻게 학습하는지 그 과정에 대해서 알아보겠습니다. 여기서 학습이라는 것은 모델이 더 분류를 잘할 수 있게 만드는 것을 의미합니</description>
    </item>
    
    <item>
      <title>Chpater1 브로드캐스트 연산</title>
      <link>https://choosunsick.github.io/post/broadcast_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:22:00 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/broadcast_operation/</guid>
      <description>브로드캐스트란? 앞서 행렬과 벡터 간 연산을 할 때 재활용 규칙을 사용하여 연산이 이루어진다고 언급한 적이 있습니다. 그러나 사실 다른 방법으로도 행렬과 벡터 간 연산</description>
    </item>
    
    <item>
      <title>Chpater1 행렬의 연산</title>
      <link>https://choosunsick.github.io/post/matrix_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:45 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/matrix_operation/</guid>
      <description>행렬의 연산 이제 벡터의 연산에 이어 행렬의 연산에 대해 알아보겠습니다. 행렬의 연산의 경우 행렬과 오브젝트 간 연산 행렬과 행렬 간 연산 두 가지 경우가 있습니다. 행렬</description>
    </item>
    
    <item>
      <title>Chpater1 벡터의 연산</title>
      <link>https://choosunsick.github.io/post/vector_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/vector_operation/</guid>
      <description>소개 이번 글에서는 벡터, 행렬의 연산 방법에 대해 알아볼 것입니다. 수학 법칙에 따른 연산뿐만 아니라 브로드캐스트(원소별연산)에 대해서 알아볼 것입니다. 브로</description>
    </item>
    
    <item>
      <title>Mnist 손글씨 데이터 읽어오는 패키지 소개</title>
      <link>https://choosunsick.github.io/post/mnist/</link>
      <pubDate>Sat, 08 Feb 2020 17:29:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/mnist/</guid>
      <description>dslabs 패키지 소개 스터디 그룹에서 프로젝트를 진행하면서 데이터셋과 관련된 좋은 패키지를 발견하여 소개해드릴까 합니다. R CLAN에 등록된 dslabs이라는 패</description>
    </item>
    
    <item>
      <title>Chapter1 R 초심자를 위한 간단한 사용법 2</title>
      <link>https://choosunsick.github.io/post/r_programming_grammar/</link>
      <pubDate>Fri, 17 Jan 2020 17:43:41 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_programming_grammar/</guid>
      <description>1.2 R 사용시 필요한 대표적인 기초 문법 1.2.1 함수 함수는 특정 동작을 수행하는 블럭입니다. 다른 객체로 값을 전달하거나 계산을 하거나 등의 기능을 처리한 후 그 값을 반환합</description>
    </item>
    
    <item>
      <title>Chapter1 R 초심자를 위한 간단한 사용법 1</title>
      <link>https://choosunsick.github.io/post/r_structure/</link>
      <pubDate>Fri, 17 Jan 2020 17:42:53 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_structure/</guid>
      <description>소개 이 글은 딥러닝 패키지 라이브러리를 사용하지 않고 R로 딥러닝의 원리를 파악하고 구현해나가는 과정을 소개할 것 입니다. 이 글은 기본적인 수학적 지식을 가지고 있</description>
    </item>
    
    <item>
      <title>R 초심자를 위한 R 설치방법과 기초 사용방법</title>
      <link>https://choosunsick.github.io/post/r_install/</link>
      <pubDate>Fri, 17 Jan 2020 17:39:27 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_install/</guid>
      <description>R 설치 &amp;amp; 실행 방법 R의 설치에 앞서 R이 무엇인지에 대해 간략하게 설명하면, R은 통계학과 그래픽을 다루는 소프트웨어입니다. R은 기존의 통계학을 다루는 프로그</description>
    </item>
    
    <item>
      <title>R을 사용해 HDF5 파일로 만들고 데이터 압축하기</title>
      <link>https://choosunsick.github.io/post/make_hdf_5_for_r/</link>
      <pubDate>Wed, 17 Jul 2019 17:21:17 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/make_hdf_5_for_r/</guid>
      <description>R로 HDF5 파일 만들기 안녕하세요. 스터디 그룹 LOPES의 추선식 입니다. 오늘은 저번에 소개한 프로젝트에 이어 R을 사용해 데이터를 HDF5 파일로 저장하는 방법을 소개</description>
    </item>
    
    <item>
      <title>R을 사용해 모든 주식 종목 데이터를 하나의 파일로 저장하기</title>
      <link>https://choosunsick.github.io/post/stockdata_to_hdf5/</link>
      <pubDate>Wed, 10 Jul 2019 17:16:03 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/stockdata_to_hdf5/</guid>
      <description>안녕하세요. 스터디 그룹 LOPES의 추선식 입니다. 이전의 프로젝트 소개글에서 언급한 것과 같이 이번에는 HDF5 형식에 대한 간략한 소개와 함께 R을 사용해 HDF5 파일을</description>
    </item>
    
    <item>
      <title>R에서 서로 다른 크기의 행렬 연산</title>
      <link>https://choosunsick.github.io/post/sweep_fun_introduction/</link>
      <pubDate>Tue, 09 Oct 2018 15:52:32 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/sweep_fun_introduction/</guid>
      <description>안녕하세요. Lopes팀의 추선식 입니다. 이번에 저희팀에서 밑바닥부터 시작하는 딥러닝(Deep Learning from Scratch)이란 책을 R로 구현해보면서 알게 된</description>
    </item>
    
    <item>
      <title>한국 주식 자료 소개</title>
      <link>https://choosunsick.github.io/post/korea_stock_introduction/</link>
      <pubDate>Fri, 31 Aug 2018 15:42:21 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/korea_stock_introduction/</guid>
      <description>깃허브 설명 안녕하세요. LOPES팀의 추선식입니다. 저희 팀에서 주식과 관련된 프로젝트를 하면서 차트 분석을 비롯한 여러 가지 분석을 위한 주식 데이터가 필요하</description>
    </item>
    
    <item>
      <title>KBO_update</title>
      <link>https://choosunsick.github.io/post/kbo_update/</link>
      <pubDate>Wed, 04 Jul 2018 18:05:38 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/kbo_update/</guid>
      <description>KBO_data 안녕하세요. 외대 철학과 스터디 그룹 LOPES의 추선식 입니다. 데이터 분석을 공부하면서 느낀 점은 학습에 맞게 구성된 데이터가 적고 이런 형태의 자료를 현실적</description>
    </item>
    
  </channel>
</rss>