<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R로 딥러닝하기 on Sunsick&#39;s blog</title>
    <link>https://choosunsick.github.io/tags/r%EB%A1%9C-%EB%94%A5%EB%9F%AC%EB%8B%9D%ED%95%98%EA%B8%B0/</link>
    <description>Recent content in R로 딥러닝하기 on Sunsick&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 16 Mar 2020 19:35:04 +0900</lastBuildDate>
    
	<atom:link href="https://choosunsick.github.io/tags/r%EB%A1%9C-%EB%94%A5%EB%9F%AC%EB%8B%9D%ED%95%98%EA%B8%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>손글씨 인식하기</title>
      <link>https://choosunsick.github.io/post/neural_network_practice/</link>
      <pubDate>Mon, 16 Mar 2020 19:35:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_practice/</guid>
      <description>손글씨 데이터 인식하고 분류하기 모델을 만들었지만 이 모델을 사용하기에는 아직 제한이 있습니다. 왜냐하면, 이 모델은 훈련을 거치지 않았기 때문에 성능이 좋지 못합</description>
    </item>
    
    <item>
      <title>3층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/softmax_function/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:26 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/softmax_function/</guid>
      <description>소프트맥스 함수 출력층에서 사용하는 함수에는 항등함수와 소프트맥스 함수가 있습니다. 항등함수의 경우 이름 그대로 입력이 곧 출력이 되는 함수로 신경망 회귀 모델을</description>
    </item>
    
    <item>
      <title>활성화 함수 소개</title>
      <link>https://choosunsick.github.io/post/activation_fuctions/</link>
      <pubDate>Mon, 16 Mar 2020 19:34:03 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/activation_fuctions/</guid>
      <description>활성화 함수 활성화 함수는 이전층(layer)의 뉴런에서 다음 층의 뉴런으로 신호를 전달하는 역할을 합니다. 이때 활성화 함수의 값에 따라서 다음 층의 뉴런으로 출</description>
    </item>
    
    <item>
      <title>신경망 소개</title>
      <link>https://choosunsick.github.io/post/neural_network_intro/</link>
      <pubDate>Mon, 16 Mar 2020 19:32:28 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/neural_network_intro/</guid>
      <description>소개 이번 글에서는 인공지능 분야에서 가장 기초가 되는 신경망이 무엇인지 알아보고 그것에 요소들과 신경망을 R로 구현해 손글씨 인식 및 분류 모델을 만들어 보겠습니다</description>
    </item>
    
    <item>
      <title>2층 신경망 구현</title>
      <link>https://choosunsick.github.io/post/nural_network_5/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:14 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/nural_network_5/</guid>
      <description>신경망 모델에서 기울기 신경망 모델에서 기울기는 무엇을 의미할까요? 신경망 모델에서 기울기는 가중치 행렬의 원소들이 각각 조금 씩 변할 때 손실 함수의 변화정도를 의</description>
    </item>
    
    <item>
      <title>미분과 확률적 경사하강법</title>
      <link>https://choosunsick.github.io/post/nural_network_4/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:08 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/nural_network_4/</guid>
      <description>수치미분과 기울기 미분을 사용하는 이유는 작은 변화에 따른 손실 함수의 변화 방향을 알기위해서 입니다. 신경망 모델에서 미분을 활용하는 방식을 경사하강법이라 말하</description>
    </item>
    
    <item>
      <title>미니 배치 학습과 손실 함수 사용의 이유</title>
      <link>https://choosunsick.github.io/post/nural_network_3/</link>
      <pubDate>Sat, 14 Mar 2020 22:14:04 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/nural_network_3/</guid>
      <description>미니배치 학습 머신러닝에서 모델의 성능을 높이기 위해서는 훈련데이터를 사용합니다. 신경망 모델에서도 마찬가지로 훈련데이터를 이용해 손실 함수 값이 최소화가 되</description>
    </item>
    
    <item>
      <title>손실 함수의 개념</title>
      <link>https://choosunsick.github.io/post/nural_network_2/</link>
      <pubDate>Sat, 14 Mar 2020 22:13:44 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/nural_network_2/</guid>
      <description>손실 함수 이제 신경망에서 어떻게 학습이 이루어지는지 본격적으로 알아보겠습니다. 신경망에서는 학습을 통해 모델의 성능을 나아지게 합니다. 그렇다면 모델의 학습</description>
    </item>
    
    <item>
      <title>신경망 학습의 개념</title>
      <link>https://choosunsick.github.io/post/nural_network_1/</link>
      <pubDate>Sat, 14 Mar 2020 22:09:52 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/nural_network_1/</guid>
      <description>소개 이번 글에서는 신경망 분류 모델이 어떻게 학습하는지 그 과정에 대해서 알아보겠습니다. 여기서 학습이라는 것은 모델이 더 분류를 잘할 수 있게 만드는 것을 의미합니</description>
    </item>
    
    <item>
      <title>브로드캐스트</title>
      <link>https://choosunsick.github.io/post/broadcast_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:22:00 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/broadcast_operation/</guid>
      <description>브로드캐스트 앞서 행렬과 벡터 간 연산을 할 때 재활용 규칙을 사용하여 연산이 이루어진다고 언급한 적이 있습니다. 그러나 사실 다른 방법으로도 행렬과 벡터 간 연산이 가</description>
    </item>
    
    <item>
      <title>행렬의 연산</title>
      <link>https://choosunsick.github.io/post/matrix_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:45 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/matrix_operation/</guid>
      <description>행렬의 연산 이제 벡터의 연산에 이어 행렬의 연산에 대해 알아보겠습니다. 행렬의 연산의 경우 행렬과 오브젝트 간 연산 행렬과 행렬 간 연산 두 가지 경우가 있습니다. 행렬</description>
    </item>
    
    <item>
      <title>벡터의 연산</title>
      <link>https://choosunsick.github.io/post/vector_operation/</link>
      <pubDate>Sat, 08 Feb 2020 20:21:30 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/vector_operation/</guid>
      <description>소개 이번 글에서는 벡터, 행렬의 연산 방법에 대해 알아볼 것입니다. 수학 법칙에 따른 연산뿐만 아니라 브로드캐스트(원소별연산)에 대해서 알아볼 것입니다. 브로</description>
    </item>
    
    <item>
      <title>R 초심자를 위한 간단한 사용법 2</title>
      <link>https://choosunsick.github.io/post/r_programming_grammar/</link>
      <pubDate>Fri, 17 Jan 2020 17:43:41 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_programming_grammar/</guid>
      <description>1.2 R 사용시 필요한 대표적인 기초 문법 1.2.1 함수 함수는 특정 동작을 수행하는 블럭입니다. 다른 객체로 값을 전달하거나 계산을 하거나 등의 기능을 처리한 후 그 값을 반환합</description>
    </item>
    
    <item>
      <title>R 초심자를 위한 간단한 사용법 1</title>
      <link>https://choosunsick.github.io/post/r_structure/</link>
      <pubDate>Fri, 17 Jan 2020 17:42:53 +0900</pubDate>
      
      <guid>https://choosunsick.github.io/post/r_structure/</guid>
      <description>소개 이 글은 딥러닝 패키지 라이브러리를 사용하지 않고 R로 딥러닝의 원리를 파악하고 구현해나가는 과정을 소개할 것 입니다. 이 글은 기본적인 수학적 지식을 가지고 있</description>
    </item>
    
  </channel>
</rss>